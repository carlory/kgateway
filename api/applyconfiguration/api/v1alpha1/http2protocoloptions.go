// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	resource "k8s.io/apimachinery/pkg/api/resource"
)

// Http2ProtocolOptionsApplyConfiguration represents a declarative configuration of the Http2ProtocolOptions type for use
// with apply.
type Http2ProtocolOptionsApplyConfiguration struct {
	InitialStreamWindowSize                 *resource.Quantity `json:"initialStreamWindowSize,omitempty"`
	InitialConnectionWindowSize             *resource.Quantity `json:"initialConnectionWindowSize,omitempty"`
	MaxConcurrentStreams                    *int               `json:"maxConcurrentStreams,omitempty"`
	OverrideStreamErrorOnInvalidHttpMessage *bool              `json:"overrideStreamErrorOnInvalidHttpMessage,omitempty"`
}

// Http2ProtocolOptionsApplyConfiguration constructs a declarative configuration of the Http2ProtocolOptions type for use with
// apply.
func Http2ProtocolOptions() *Http2ProtocolOptionsApplyConfiguration {
	return &Http2ProtocolOptionsApplyConfiguration{}
}

// WithInitialStreamWindowSize sets the InitialStreamWindowSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InitialStreamWindowSize field is set to the value of the last call.
func (b *Http2ProtocolOptionsApplyConfiguration) WithInitialStreamWindowSize(value resource.Quantity) *Http2ProtocolOptionsApplyConfiguration {
	b.InitialStreamWindowSize = &value
	return b
}

// WithInitialConnectionWindowSize sets the InitialConnectionWindowSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InitialConnectionWindowSize field is set to the value of the last call.
func (b *Http2ProtocolOptionsApplyConfiguration) WithInitialConnectionWindowSize(value resource.Quantity) *Http2ProtocolOptionsApplyConfiguration {
	b.InitialConnectionWindowSize = &value
	return b
}

// WithMaxConcurrentStreams sets the MaxConcurrentStreams field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxConcurrentStreams field is set to the value of the last call.
func (b *Http2ProtocolOptionsApplyConfiguration) WithMaxConcurrentStreams(value int) *Http2ProtocolOptionsApplyConfiguration {
	b.MaxConcurrentStreams = &value
	return b
}

// WithOverrideStreamErrorOnInvalidHttpMessage sets the OverrideStreamErrorOnInvalidHttpMessage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OverrideStreamErrorOnInvalidHttpMessage field is set to the value of the last call.
func (b *Http2ProtocolOptionsApplyConfiguration) WithOverrideStreamErrorOnInvalidHttpMessage(value bool) *Http2ProtocolOptionsApplyConfiguration {
	b.OverrideStreamErrorOnInvalidHttpMessage = &value
	return b
}
