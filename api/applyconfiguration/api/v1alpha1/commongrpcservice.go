// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	v1 "sigs.k8s.io/gateway-api/apis/v1"

	apiv1alpha1 "github.com/kgateway-dev/kgateway/v2/api/v1alpha1"
)

// CommonGrpcServiceApplyConfiguration represents a declarative configuration of the CommonGrpcService type for use
// with apply.
type CommonGrpcServiceApplyConfiguration struct {
	BackendRef              *v1.BackendRef                 `json:"backendRef,omitempty"`
	Authority               *string                        `json:"authority,omitempty"`
	MaxReceiveMessageLength *uint32                        `json:"maxReceiveMessageLength,omitempty"`
	SkipEnvoyHeaders        *bool                          `json:"skipEnvoyHeaders,omitempty"`
	Timeout                 *metav1.Duration               `json:"timeout,omitempty"`
	InitialMetadata         []*apiv1alpha1.HeaderValue     `json:"initialMetadata,omitempty"`
	RetryPolicy             *RetryPolicyApplyConfiguration `json:"retryPolicy,omitempty"`
}

// CommonGrpcServiceApplyConfiguration constructs a declarative configuration of the CommonGrpcService type for use with
// apply.
func CommonGrpcService() *CommonGrpcServiceApplyConfiguration {
	return &CommonGrpcServiceApplyConfiguration{}
}

// WithBackendRef sets the BackendRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackendRef field is set to the value of the last call.
func (b *CommonGrpcServiceApplyConfiguration) WithBackendRef(value v1.BackendRef) *CommonGrpcServiceApplyConfiguration {
	b.BackendRef = &value
	return b
}

// WithAuthority sets the Authority field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Authority field is set to the value of the last call.
func (b *CommonGrpcServiceApplyConfiguration) WithAuthority(value string) *CommonGrpcServiceApplyConfiguration {
	b.Authority = &value
	return b
}

// WithMaxReceiveMessageLength sets the MaxReceiveMessageLength field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxReceiveMessageLength field is set to the value of the last call.
func (b *CommonGrpcServiceApplyConfiguration) WithMaxReceiveMessageLength(value uint32) *CommonGrpcServiceApplyConfiguration {
	b.MaxReceiveMessageLength = &value
	return b
}

// WithSkipEnvoyHeaders sets the SkipEnvoyHeaders field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SkipEnvoyHeaders field is set to the value of the last call.
func (b *CommonGrpcServiceApplyConfiguration) WithSkipEnvoyHeaders(value bool) *CommonGrpcServiceApplyConfiguration {
	b.SkipEnvoyHeaders = &value
	return b
}

// WithTimeout sets the Timeout field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Timeout field is set to the value of the last call.
func (b *CommonGrpcServiceApplyConfiguration) WithTimeout(value metav1.Duration) *CommonGrpcServiceApplyConfiguration {
	b.Timeout = &value
	return b
}

// WithInitialMetadata adds the given value to the InitialMetadata field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the InitialMetadata field.
func (b *CommonGrpcServiceApplyConfiguration) WithInitialMetadata(values ...**apiv1alpha1.HeaderValue) *CommonGrpcServiceApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithInitialMetadata")
		}
		b.InitialMetadata = append(b.InitialMetadata, *values[i])
	}
	return b
}

// WithRetryPolicy sets the RetryPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RetryPolicy field is set to the value of the last call.
func (b *CommonGrpcServiceApplyConfiguration) WithRetryPolicy(value *RetryPolicyApplyConfiguration) *CommonGrpcServiceApplyConfiguration {
	b.RetryPolicy = value
	return b
}
